"scale(en_loser)",
"scale(en_dv_winner)",
"scale(en_dv_loser)",
#"scale(en_winner_2)",
#"scale(en_loser_2)",
#"scale(en_dv_winner_2)",
#"scale(en_dv_loser_2)",
"scale(polling_winner_fround)",
"scale(flip_neighbors)",
"scale(polarization)"
# "scale(flip_neighbors)",
)
tbl <- nlstargazer(
list(model_1, model_2, model_3, model_4, model_5, model_6, model_7, model_9),
digits = 3,
sort_parameters = target,
rename_parameters = list(
c("scale(rate_winner)", "Rate Winner"),
c("scale(rate_loser)", "Rate Loser"),
c("scale(dv_winner)", "Divisiveness Winner"),
c("scale(dv_loser)", "Divisiveness Loser"),
c("scale(en_winner)", "Endorsement Winner"),
c("scale(en_loser)", "Endorsement Loser"),
c("scale(en_dv_winner)", "Div. Endors. Winner"),
c("scale(en_dv_loser)", "Div. Endors. Loser"),
c("scale(polling_winner_fround)", "Same.Winner"),
c("scale(flip_neighbors)", "Avg. Flip Neighbors"),
c("scale(polarization)", "GPI")
)
)
kable(tbl) %>%
kable_classic_2(full_width = T)
plot_summs(model_9)
library(jtools)
plot_summs(model_9)
library(jtools)
model <- glm(
flip ~ scale(rate_winner) + scale(rate_loser),
family = binomial(link = "logit"),
data = df
)
plot_summs(model, plot.distributions = TRUE)
model.1 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.2 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) | department + country + year,
family = binomial(link = "logit"),
data = df
)
model.3 <- alpaca::feglm(
flip ~ scale(dv_winner) + scale(dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.4 <- alpaca::feglm(
flip ~ scale(en_winner) + scale(en_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.5 <- alpaca::feglm(
flip ~ scale(en_dv_winner) + scale(en_dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.6 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.7 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.8 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) + scale(en_dv_winner) + scale(en_dv_loser) + scale(flip_neighbors) + scale(polling_winner_fround)  | country + year,
family = binomial(link = "logit"),
data = df
)
model.9 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) + scale(en_dv_winner) + scale(en_dv_loser) + scale(polarization) + scale(flip_neighbors) + scale(polling_winner_fround)  | country + year,
family = binomial(link = "logit"),
data = df
)
# stargazer(model_1, model_2, model_3, model_4, model_5, model_6, type = "text") +  scale(flip_neighbors)
model.1 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.2 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) | department + country + year,
family = binomial(link = "logit"),
data = df
)
model.3 <- alpaca::feglm(
flip ~ scale(dv_winner) + scale(dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.4 <- alpaca::feglm(
flip ~ scale(en_winner) + scale(en_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.5 <- alpaca::feglm(
flip ~ scale(en_dv_winner) + scale(en_dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.6 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.7 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) | country + year,
family = binomial(link = "logit"),
data = df
)
model.8 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) + scale(en_dv_winner) + scale(en_dv_loser) + scale(flip_neighbors) + scale(polling_winner_fround)  | country + year,
family = binomial(link = "logit"),
data = df
)
model.9 <- alpaca::feglm(
flip ~ scale(rate_winner) + scale(rate_loser) + scale(dv_winner) + scale(dv_loser) + scale(en_winner) + scale(en_loser) + scale(en_dv_winner) + scale(en_dv_loser) + scale(polarization) + scale(flip_neighbors) + scale(polling_winner_fround)  | country + year,
family = binomial(link = "logit"),
data = df
)
# stargazer(model_1, model_2, model_3, model_4, model_5, model_6, type = "text") +  scale(flip_neighbors)
source("nlstargazer.R")
target <- c(
"scale(rate_winner)",
"scale(rate_loser)",
"scale(dv_winner)",
"scale(dv_loser)",
"scale(en_winner)",
"scale(en_loser)",
"scale(en_dv_winner)",
"scale(en_dv_loser)",
#"scale(en_winner_2)",
#"scale(en_loser_2)",
#"scale(en_dv_winner_2)",
#"scale(en_dv_loser_2)",
"scale(polling_winner_fround)",
"scale(flip_neighbors)",
"scale(polarization)"
# "scale(flip_neighbors)",
)
tbl <- nlstargazer(
list(model.1, model.2, model.3, model.4, model.5, model.6, model.7, model.8, model.9),
digits = 3,
sort_parameters = target,
rename_parameters = list(
c("scale(rate_winner)", "Rate Winner"),
c("scale(rate_loser)", "Rate Loser"),
c("scale(dv_winner)", "Divisiveness Winner"),
c("scale(dv_loser)", "Divisiveness Loser"),
c("scale(en_winner)", "Endorsement Winner"),
c("scale(en_loser)", "Endorsement Loser"),
c("scale(en_dv_winner)", "Div. Endors. Winner"),
c("scale(en_dv_loser)", "Div. Endors. Loser"),
c("scale(polling_winner_fround)", "Same.Winner"),
c("scale(flip_neighbors)", "Avg. Flip Neighbors"),
c("scale(polarization)", "GPI")
)
)
kable(tbl) %>%
kable_classic_2(full_width = T)
year <- 2021
country <- "Chile"
geography <- "province"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.dv <- setDT(read.csv(glue("data_output/{country}/{year}_divisiveness_{geography}.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}.csv"), row.names = TRUE)
z$Bb
z$bb
data.frame(z$bb)
df <- data.frame(z$bb)
df <- data.frame(z$bb)
df
df <- data.frame(z$bb)
df$province <- df.F$province
df
df <- data.frame(z$bb)
df$province <- df.F$province
df <- merge(df, df.dv, by = "province")
df
df <- data.frame(z$bb)
df$province <- df.F$province
df <- merge(df, df.dv, by = "province")
df
df <- data.frame(z$bb)
df$province <- df.F$province
df <- merge(df, subset(df.dv, candidate == "FRANCO PARISI FERNANDEZ"), by = "province")
df
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value)) +
geom_point()
df <- data.frame(z$bb)
df$province <- df.F$province
df <- merge(df, subset(df.dv, candidate == "JOSE ANTONIO KAST RIST"), by = "province")
df
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value)) +
geom_point()
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value, label=province)) +
geom_point() + geom_text()
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value)) +
geom_point() + geom_text()
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value, label=province)) +
geom_point() #+ geom_text()
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value, label=province)) +
geom_point() + geom_text()
ggplot(df, aes(x=FRANCO.PARISI.FERNANDEZ.JOSE.ANTONIO.KAST.RIST, y=value, label=province)) +
geom_point() # + geom_text()
year <- 2022
country <- "France"
geography <- "department"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.dv <- setDT(read.csv(glue("data_output/{country}/{year}_divisiveness_{geography}.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$bb)
write.csv(df, glue("data_transition/{country}_{year}_expanded.csv"), row.names = TRUE)
df$province <- df.F$province
df <- merge(df, subset(df.dv, candidate == "JOSE ANTONIO KAST RIST"), by = "province")
df$department <- df.F$department
write.csv(df, glue("data_transition/{country}_{year}_expanded.csv"), row.names = TRUE)
reticulate::repl_python()
x = 1
yes
quit
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2017
country <- "France"
geography <- "department"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.dv <- setDT(read.csv(glue("data_output/{country}/{year}_divisiveness_{geography}.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_expanded.csv"), row.names = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2017
country <- "France"
geography <- "commune"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.dv <- setDT(read.csv(glue("data_output/{country}/{year}_divisiveness_{geography}.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_expanded.csv"), row.names = TRUE)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}_{geography}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_{geography}_expanded.csv"), row.names = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2022
country <- "France"
geography <- "commune"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.dv <- setDT(read.csv(glue("data_output/{country}/{year}_divisiveness_{geography}.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}_{geography}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_{geography}_expanded.csv"), row.names = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2022
country <- "France"
geography <- "commune_id"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}_{geography}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_{geography}_expanded.csv"), row.names = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2021
country <- "Chile"
geography <- "commune"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.1)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}_{geography}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_{geography}_expanded.csv"), row.names = TRUE)
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.01)
df <- data.frame(z$Bb)
write.csv(df, glue("data_transition/{country}_{year}_{geography}.csv"), row.names = TRUE)
df <- data.frame(z$bb)
df[glue("{geography}")] <- df.F[glue("{geography}")]
write.csv(df, glue("data_transition/{country}_{year}_{geography}_expanded.csv"), row.names = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2012
country <- "France"
geography <- "department"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
source("VTR.R")
library(tidyverse)
library(data.table)
library(ggplot2)
library(glue)
year <- 2012
country <- "France"
geography <- "department_id"
df.1 <- setDT(read.csv(glue("data_output/{country}/{year}_first_round.csv.gz"), encoding = "UTF-8"))
df.2 <- setDT(read.csv(glue("data_output/{country}/{year}_runoff.csv.gz"), encoding = "UTF-8"))
df.location <- setDT(read.csv(glue("data_output/{country}/{year}_first_round_location.csv.gz"), encoding = "UTF-8"))
df.1 <- merge(df.1, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.2 <- merge(df.2, df.location[, c("polling_id", glue("{geography}"))], by = "polling_id", allow.cartesian = TRUE)
df.total.1 <- df.1[ , .(total = sum(value)), by = geography]
df.1 <- df.1[ , .(value = sum(value)), by = c(geography, "candidate")]
df.1 <- merge(df.1, df.total.1, by = geography)
df.1$rate <- df.1$value / df.1$total
df.total.2 <- df.2[ , .(total = sum(value)), by = geography]
df.2 <- df.2[ , .(value = sum(value)), by = c(geography, "candidate")]
df.2 <- merge(df.2, df.total.2, by = geography)
df.2$rate <- df.2$value / df.2$total
df.1[is.na(df.1)] <- 0
df.2[is.na(df.2)] <- 0
df.F <- pivot_wider(df.1, id_cols = geography, names_from = "candidate", values_from = "rate")
df.S <- pivot_wider(df.2, id_cols = geography, names_from = "candidate", values_from = "rate")
data_sum <- df.1[ , .(N = sum(value)), by = geography]     # Aggregate data
myN <- data.frame(value = data_sum[["N"]])
myF <- df.F[, unique(df.1$candidate)]
myS <- df.S[, unique(df.2$candidate)]
z <- multirate(myN, myF, myS, 0.01)
View(df.S)
View(df.S)
